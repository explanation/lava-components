{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    path = _useState2[0],\n    setPath = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [path == null && _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"Pick a Screen\", \"\\n\\n\"]\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return setPath('search');\n        },\n        title: \"Search\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return setPath('ilya');\n        },\n        title: \"Ilya\"\n      })]\n    }), path == 'muzair' && _jsx(MuzairHomeScreen, {}), path == 'ilya' && _jsx(SweatHomeScreen, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","App","path","setPath","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/runner/LavaComponentsSaaniya/App.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, Text, View, Button } from 'react-native'\n\n\nexport default function App() {\n  const [path, setPath] = useState<string | null>(null)\n\n  return (\n    <View style={styles.container}>\n\n        {path == null &&\n        <View>\n            <Text>Pick a Screen{\"\\n\\n\"}</Text>\n            <Button\n                onPress={() => setPath('search')}\n                title=\"Search\"\n              />\n            <Button\n                onPress={() => setPath('ilya')}\n                title=\"Ilya\"\n              />\n        </View>}\n\n        {path == 'muzair' &&\n            <MuzairHomeScreen />\n        }\n        {path == 'ilya' &&\n            <SweatHomeScreen />\n        }\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvC,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAwBD,QAAQ,CAAgB,IAAI,CAAC;IAAA;IAA9CE,IAAI;IAAEC,OAAO;EAEpB,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAEzBH,IAAI,IAAI,IAAI,IACb,MAAC,IAAI;MAAA,WACD,MAAC,IAAI;QAAA,4BAAe,MAAM;MAAA,EAAQ,EAClC,KAAC,MAAM;QACH,OAAO,EAAE;UAAA,OAAMC,OAAO,CAAC,QAAQ,CAAC;QAAA,CAAC;QACjC,KAAK,EAAC;MAAQ,EACd,EACJ,KAAC,MAAM;QACH,OAAO,EAAE;UAAA,OAAMA,OAAO,CAAC,MAAM,CAAC;QAAA,CAAC;QAC/B,KAAK,EAAC;MAAM,EACZ;IAAA,EACD,EAEND,IAAI,IAAI,QAAQ,IACb,KAAC,gBAAgB,KAAG,EAEvBA,IAAI,IAAI,MAAM,IACX,KAAC,eAAe,KAAG;EAAA,EAEpB;AAEX;AAEA,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}